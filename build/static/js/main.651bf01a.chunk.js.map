{"version":3,"sources":["selectors/index.js","actions/films.js","helpers/cahce.js","requests/index.js","constants/index.js","actions/search.js","helpers/index.js","actions/pages.js","sagas/index.js","reducers/films.js","reducers/pages.js","reducers/search.js","components/SearchInput.js","containers/SearchInputContainer.js","uiComponents/Spinner.js","components/FilmPreviewCard.js","components/FilmList.js","containers/FilmListContainer.js","containers/LoadMoreContainer.js","containers/SearchFilmAppContainer.js","components/SearchFilmApp.js","components/FilmCard.js","components/App.js","serviceWorker.js","index.js"],"names":["getCurrentParams","_ref","currentPage","pages","searchString","search","FETCH_FILMS_BY_SEARCH","fetchBySearch","type","FETCH_NEXT_PAGE","FETCH_FILMS_FAILED","fetchFilmsFailed","STOP_FETCHING","stopFetching","RECEIVE_FILMS","receiveFilms","films","total","RECEIVE_NEXT_PAGE","receiveNextPage","cache","Cache","_this","this","maxSize","arguments","length","undefined","Object","classCallCheck","set","name","val","manageSize","get","queue","shift","hasOwnProperty","instance","defineProperty","value","enumerable","writable","configurable","withCache","fnToCache","_len","args","Array","_key","key","md5","JSON","stringify","resultFromCache","Promise","resolve","call","apply","concat","then","result","baseUrl","defaultRequestOptions","method","headers","Accept","processRawResponse","rawResponse","status","statusText","json","reject","processResponse","response","Error","fetchFilms","queryString","fetch","fetchById","id","MIN_SEARCH_LENGTH","CHANGE_SEARCH_STRING","buildSearchQuery","s","page","allowFetchCondition","stopFetchCondition","_ref2","uniqueByImdbId","ids","reduce","acc","film","includes","imdbID","push","SET_CURRENT_PAGE","setCurrentPage","fetchFilmsBySearch","handleSearchRequestSaga","fetchFilmsNextPage","fetchFilmsSaga","Search","totalResults","regenerator_default","a","wrap","_context","prev","next","delay","put","sent","t0","console","warn","t1","all","t2","t3","toConsumableArray","cancelled","t4","t5","t6","t7","finish","stop","_marked","_context2","race","task","cancel","take","_marked2","_ref3","_ref4","_context3","select","_marked3","_context4","takeLatest","takeEvery","_marked4","initialState","isProcessing","SearchInput","_this$props","props","handleSearchChange","className","react_default","createElement","onChange","placeholder","aria-label","PureComponent","connect","dispatch","target","Spinner","radius","color","style","width","height","borderColor","defaultProps","FilmPreviewCard","filmId","title","year","Link","to","FilmList","renderShortQueryHint","renderSummary","shownCount","renderFilms","map","Title","Year","Type","FilmPreviewCard_FilmPreviewCard","uiComponents_Spinner","_ref$films","mapDispatchToProps","fetchNextPage","onClick","allowLoadMore","SearchInputContainer","FilmListContainer","LoadMoreContainer","UnavailableServiceNote","NavBlock","ActorsList","actors","split","actor","FilmTitle","rating","FilmCardBody","Poster","Actors","Country","imdbRating","Genre","Plot","src","alt","FilmCard_FilmTitle","FilmCard_ActorsList","FilmCard","state","data","handleSuccessResponse","setState","handleErrorResponse","error","renderFilmCardBody","keys","FilmCard_FilmCardBody","FilmCard_UnavailableServiceNote","catch","_this$state","FilmCard_NavBlock","reducer","combineReducers","action","objectSpread","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","WrongRoute","FilmContainer","match","params","components_FilmCard","App","es","BrowserRouter","Switch","Route","path","exact","component","SearchFilmAppContainer","Component","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.651bf01a.chunk.js","sourcesContent":["export const getCurrentParams = ({ pages: {currentPage}, search: {searchString} }) => ({ currentPage, searchString });\r\n\r\n\r\n\r\n\r\n","export const FETCH_FILMS_BY_SEARCH = 'FETCH_FILMS_BY_SEARCH';\r\nexport const fetchBySearch = searchString => ({\r\n    type: FETCH_FILMS_BY_SEARCH,\r\n    searchString\r\n});\r\n\r\nexport const FETCH_NEXT_PAGE = 'FETCH_NEXT_PAGE';\r\nexport const fetchNextPage = () => ({\r\n    type: FETCH_NEXT_PAGE,\r\n});\r\n\r\nexport const FETCH_FILMS_FAILED = 'FETCH_FILMS_FAILED';\r\nexport const fetchFilmsFailed = {\r\n    type: FETCH_FILMS_FAILED\r\n};\r\n\r\nexport const STOP_FETCHING = 'STOP_FETCHING';\r\nexport const stopFetching = {\r\n    type: STOP_FETCHING\r\n};\r\n\r\nexport const RECEIVE_FILMS = 'RECEIVE_FILMS';\r\nexport const receiveFilms = (films, total) => ({\r\n    type: RECEIVE_FILMS,\r\n    films,\r\n    total: +total\r\n});\r\n\r\nexport const RECEIVE_NEXT_PAGE = 'RECEIVE_NEXT_PAGE';\r\nexport const receiveNextPage = films => ({\r\n    type: RECEIVE_NEXT_PAGE,\r\n    films\r\n});\r\n","import md5 from 'js-md5';\r\n\r\n/**\r\n * singleton for caching\r\n * usage: import {cache} from \" ... helpers/Cache\";\r\n * cache.set('someValue', 123)\r\n * cache.get('someValue')\r\n */\r\nclass Cache {\r\n    constructor(maxSize = 100) {\r\n        if (Cache.hasOwnProperty('instance')) {\r\n            return Cache.instance;\r\n        }\r\n        this.queue = [];\r\n        this.maxSize = maxSize;\r\n        Object.defineProperty(Cache, 'instance',{\r\n            value: this,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false\r\n        });\r\n    }\r\n\r\n    set = (name, val) => {\r\n        this.manageSize();\r\n        this[name] = val;\r\n    }\r\n\r\n    get = name => this[name]\r\n\r\n    manageSize = () => {\r\n        if (this.queue.length > this.maxSize) {\r\n            delete this[this.queue.shift()];\r\n        }\r\n    }\r\n}\r\n\r\nexport const cache = new Cache();\r\n\r\n/**\r\n * higher order function for caching\r\n * @param fnToCache\r\n */\r\nexport const withCache = fnToCache => (...args) => {\r\n    const key = md5(JSON.stringify(args));\r\n    const resultFromCache = cache.get(key);\r\n    return resultFromCache\r\n        ? Promise.resolve(resultFromCache)\r\n        : fnToCache\r\n            .call(null, ...args)\r\n            .then(result => {\r\n                cache.set(key, result);\r\n                return Promise.resolve(result);\r\n            })\r\n}","import {withCache} from \"../helpers/cahce\";\r\n\r\nconst apiKey = '1977b733';\r\nconst baseUrl = `http://www.omdbapi.com/?apikey=${apiKey}`;\r\n\r\nconst defaultRequestOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n        \"Accept\": \"application/json\"\r\n    },\r\n};\r\n\r\nconst processRawResponse = rawResponse => {\r\n    const {status, statusText} = rawResponse;\r\n    return status && status === 200\r\n        ? Promise.resolve(rawResponse.json())\r\n        : Promise.reject(`${status} error: ${statusText}`)\r\n};\r\n\r\nconst processResponse = response => response.Error\r\n    ? Promise.reject(response.Error)\r\n    : Promise.resolve(response);\r\n\r\n\r\nconst fetchOneById = id => fetch (\r\n        `${baseUrl}&i=${id}`,\r\n        defaultRequestOptions\r\n    )\r\n    .then(processRawResponse)\r\n    .then(processResponse);\r\n\r\nconst fetchFilmsByQuery = queryString => fetch(\r\n        `${baseUrl}&${queryString}`,\r\n        defaultRequestOptions\r\n    )\r\n    .then(processRawResponse)\r\n    .then(processResponse);\r\n\r\nexport const fetchFilms = withCache(fetchFilmsByQuery);\r\nexport const fetchById = withCache(fetchOneById);","export const MIN_SEARCH_LENGTH = 3;","export const CHANGE_SEARCH_STRING = 'CHANGE_SEARCH_STRING';\r\nexport const changeSearchString = searchString => ({\r\n    type: CHANGE_SEARCH_STRING,\r\n    searchString\r\n});","import queryString from \"query-string\";\r\nimport {MIN_SEARCH_LENGTH} from \"../constants/index\";\r\nimport {CHANGE_SEARCH_STRING} from \"../actions/search\";\r\n\r\nexport const buildSearchQuery = (s, page = 1) => queryString.stringify({s, page})\r\n\r\nexport const wait = msec => new Promise(resolve => {\r\n    setTimeout(() => resolve(), msec)\r\n})\r\n\r\n/**\r\n * check if given action is change search string action with correct search string\r\n * @param type\r\n * @param searchString\r\n */\r\nexport const allowFetchCondition = ({type, searchString}) => type === CHANGE_SEARCH_STRING\r\n    && searchString.length >= MIN_SEARCH_LENGTH;\r\n\r\n/**\r\n * check if given action is change search string action with incorrect search string\r\n */\r\nexport const stopFetchCondition = ({type, searchString}) => type === CHANGE_SEARCH_STRING\r\n    && searchString.length < MIN_SEARCH_LENGTH;\r\n\r\n/**\r\n * filter by imdbId to prevent duplication\r\n * @param films\r\n */\r\nexport const uniqueByImdbId = films => {\r\n    let ids = [];\r\n    return films.reduce((acc, film) => {\r\n        if (!ids.includes(film.imdbID)) {\r\n            acc.push(film);\r\n            ids.push(film.imdbID)\r\n        }\r\n        return acc;\r\n    }, []);\r\n}","export const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nexport const setCurrentPage = page => ({\r\n    type: SET_CURRENT_PAGE,\r\n    page\r\n});\r\n\r\n","import { call, put, takeLatest, take, takeEvery, delay, all, race, select, cancelled } from 'redux-saga/effects'\r\nimport { getCurrentParams } from '../selectors'\r\nimport {\r\n    FETCH_NEXT_PAGE,\r\n    fetchFilmsFailed,\r\n    receiveFilms,\r\n    receiveNextPage,\r\n    fetchBySearch,\r\n    stopFetching,\r\n} from \"../actions/films\"\r\nimport {fetchFilms} from \"../requests\"\r\nimport {buildSearchQuery} from \"../helpers\"\r\nimport {setCurrentPage} from \"../actions/pages\"\r\nimport {allowFetchCondition, stopFetchCondition, uniqueByImdbId} from \"../helpers/index\"\r\n\r\n/**\r\n * saga worker, makes searching request. wait 200ms before request\r\n * @param searchString\r\n */\r\nfunction* fetchFilmsBySearch(searchString) {\r\n    try {\r\n        yield delay(200);\r\n        yield put(fetchBySearch(searchString));\r\n        const {Search, totalResults} = yield call(fetchFilms, buildSearchQuery(searchString));\r\n        yield put(receiveFilms(uniqueByImdbId(Search), totalResults));\r\n    } catch (e) {\r\n        console.warn(e);\r\n        yield put(fetchFilmsFailed);\r\n    } finally {\r\n        yield all([\r\n            put(setCurrentPage(1)),\r\n            put(stopFetching),\r\n            ...(yield cancelled()) ? [ put(fetchFilmsFailed) ] : []\r\n        ])\r\n    }\r\n}\r\n\r\n/**\r\n * saga worker, handles search films request.\r\n * Start a race between fetching request and stop fetch action (witch is incorrect search string input)\r\n * @param {searchString} searchString change action\r\n * @see stopFetchCondition\r\n */\r\nfunction* handleSearchRequestSaga({ searchString }) {\r\n    yield race({\r\n        task: call(fetchFilmsBySearch, searchString),\r\n        cancel: take(stopFetchCondition)\r\n    })\r\n}\r\n\r\nfunction* fetchFilmsNextPage() {\r\n    const { searchString, currentPage } = yield select(getCurrentParams);\r\n    try {\r\n        const {Search} = yield call(fetchFilms, buildSearchQuery(searchString, currentPage + 1));\r\n        yield all([\r\n            put(receiveNextPage(Search)),\r\n            put(setCurrentPage(currentPage + 1))\r\n        ]);\r\n    } catch (e) {\r\n        console.warn(e);\r\n        yield put(fetchFilmsFailed);\r\n    } finally {\r\n        yield put(stopFetching);\r\n    }\r\n}\r\n\r\n/**\r\n * saga watcher. takes latest correct search string and launch worker when changing search.\r\n * Also watches next page (load more) request\r\n * @see allowFetchCondition\r\n */\r\nfunction* fetchFilmsSaga() {\r\n    yield all([\r\n        takeLatest(allowFetchCondition, handleSearchRequestSaga),\r\n        takeEvery(FETCH_NEXT_PAGE, fetchFilmsNextPage)\r\n    ]);\r\n}\r\n\r\nexport default fetchFilmsSaga;","import {\r\n    FETCH_FILMS_BY_SEARCH, FETCH_FILMS_FAILED, RECEIVE_FILMS, RECEIVE_NEXT_PAGE, STOP_FETCHING\r\n} from \"../actions/films\";\r\n\r\nconst initialState = {\r\n    isProcessing: false,\r\n    films: [],\r\n    total: 0\r\n};\r\n\r\nexport default function films(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_FILMS_BY_SEARCH:\r\n            return {\r\n                ...state,\r\n                isProcessing: true\r\n            }\r\n        case RECEIVE_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.films,\r\n                total: action.total\r\n            }\r\n        case RECEIVE_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                films: [...state.films, ...action.films]\r\n            }\r\n        case FETCH_FILMS_FAILED:\r\n            return {\r\n                ...state,\r\n                films: [],\r\n            }\r\n        case STOP_FETCHING:\r\n            return {\r\n                ...state,\r\n                isProcessing: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_PAGE} from \"../actions/pages\";\r\nimport {FETCH_NEXT_PAGE, RECEIVE_NEXT_PAGE} from \"../actions/films\";\r\n\r\nconst initialState = {\r\n    currentPage: 1,\r\n    isProcessing: false\r\n};\r\n\r\nexport default function pages(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                isProcessing: true\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case RECEIVE_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANGE_SEARCH_STRING} from \"../actions/search\";\r\n\r\nconst initialState = {\r\n    searchString: '',\r\n};\r\n\r\nexport default function search(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_STRING:\r\n            return {\r\n                ...state,\r\n                searchString: action.searchString\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {PureComponent} from 'react';\r\nimport {MIN_SEARCH_LENGTH} from \"../constants/index\";\r\n\r\n/**\r\n * Search input component. Add error class when search string is not empty but incorrect\r\n */\r\nexport default class SearchInput extends PureComponent {\r\n    render() {\r\n        const { searchString, handleSearchChange } = this.props;\r\n        const className = `form-control mr-sm-2 \r\n            ${searchString.length && searchString.length < MIN_SEARCH_LENGTH ? 'is-invalid' : ''}`;\r\n\r\n        return <input type=\"search\"\r\n                className={className}\r\n                value={searchString}\r\n                onChange={handleSearchChange}\r\n                placeholder=\"search\"\r\n                aria-label=\"Search\"\r\n            />\r\n    }\r\n}\r\n\r\n","import {connect} from \"react-redux\"\r\nimport {changeSearchString} from \"../actions/search\";\r\nimport SearchInput from \"../components/SearchInput\"\r\n\r\nconst mapStateToProps = ({ search: {searchString} }) => ({ searchString });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleSearchChange: ({target: {value}}) => dispatch(changeSearchString(value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './styles/Spinner.css'\r\n\r\nconst Spinner = (props) => {\r\n    const {radius, color} = props;\r\n    return <div className='Spinner m-3' style={{\r\n        width:radius,\r\n        height:radius,\r\n        borderColor:color\r\n    }}/>\r\n}\r\n\r\nSpinner.defaultProps = {\r\n    radius: 25,\r\n    color: 'gray'\r\n};\r\n\r\nSpinner.propTypes = {\r\n    radius: PropTypes.number,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/**\r\n * Film preview card component. Show base info and link to film's page.\r\n */\r\nexport const FilmPreviewCard = ({ filmId, title, year, type }) => <div className=\"card\">\r\n    <div className=\"card-body py-2 px-3\">\r\n        <div className=\"card-title d-flex justify-content-between\">\r\n            <h5>{title}</h5>\r\n            <h5 className=\"text-muted mr-1\">{year}</h5>\r\n        </div>\r\n        <div className=\"card-text d-flex justify-content-between\">\r\n            <p>Feel free to click 'read more' and learn more about this {type}</p>\r\n            <Link className=\"btn btn-info\" to={`/films/${filmId}`}>read more</Link>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\nFilmPreviewCard.propTypes = {\r\n    filmId: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    year: PropTypes.string,\r\n    type: PropTypes.string\r\n}","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from \"../uiComponents/Spinner\";\r\nimport {FilmPreviewCard} from \"./FilmPreviewCard\";\r\nimport {MIN_SEARCH_LENGTH} from \"../constants/index\";\r\n\r\n/**\r\n * Film list component. Render first few found films.\r\n */\r\nexport default class FilmList extends PureComponent {\r\n    static propTypes = {\r\n        isProcessing: PropTypes.bool,\r\n        films: PropTypes.array.isRequired,\r\n        total: PropTypes.number,\r\n        searchString: PropTypes.string\r\n    }\r\n\r\n    renderShortQueryHint = () => <p>\r\n            Your query must be at least {MIN_SEARCH_LENGTH} letters length.\r\n        </p>\r\n\r\n\r\n    renderSummary = () => {\r\n        const {total, films} = this.props;\r\n        const shownCount = films ? films.length : 0;\r\n        return <p>\r\n            {shownCount ? `${films.length} of ${total} results are shown` : `Nothing was found`}\r\n        </p>\r\n    }\r\n\r\n    renderFilms = () => {\r\n        const {films} = this.props;\r\n        return <div>\r\n            {\r\n                films.map(({Title, Year, Type, imdbID}) =>\r\n                    <FilmPreviewCard key={imdbID}\r\n                        title={Title}\r\n                        year={Year}\r\n                        type={Type}\r\n                        filmId={imdbID}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        return this.props.isProcessing\r\n            ? <Spinner/>\r\n            : <div>\r\n                <div className=\"text-muted mt-2\">\r\n                    {this.props.searchString.length >= MIN_SEARCH_LENGTH\r\n                        ? this.renderSummary()\r\n                        : this.renderShortQueryHint()\r\n                    }\r\n                </div>\r\n                {this.renderFilms()}\r\n            </div>\r\n    }\r\n}\r\n","import {connect} from \"react-redux\"\r\nimport FilmList from \"../components/FilmList\"\r\n\r\nconst mapStateToProps = ({ films: {films, total, isProcessing}, search: {searchString} }) => ({\r\n    films,\r\n    isProcessing,\r\n    searchString,\r\n    total\r\n});\r\n\r\nexport default connect(mapStateToProps)(FilmList);\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {fetchNextPage} from \"../actions/films\"\r\nimport Spinner from \"../uiComponents/Spinner\";\r\n\r\n/**\r\n * 'Load more' container. Represents button for fetching next page\r\n */\r\nconst NextPageButton = ({ fetchNextPage, isProcessing }) => isProcessing\r\n    ? <Spinner/>\r\n    : <button className=\"btn btn-link my-2\" onClick={fetchNextPage}>\r\n        load more..\r\n    </button>;\r\n\r\nconst mapStateToProps = ({ pages: {isProcessing} }) => ({ isProcessing })\r\nconst mapDispatchToProps = { fetchNextPage }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NextPageButton);\r\n","import {connect} from \"react-redux\"\r\nimport {SearchFilmApp} from \"../components/SearchFilmApp\"\r\n\r\n/**\r\n * when there're more films found than displayed, allows to show 'load more'\r\n */\r\nconst mapStateToProps = ({ films: {films, total, isProcessing} }) => ({\r\n    allowLoadMore: !isProcessing && (total > films.length)\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchFilmApp);\r\n","import React from 'react';\r\nimport SearchInputContainer from '../containers/SearchInputContainer';\r\nimport FilmListContainer from '../containers/FilmListContainer';\r\nimport LoadMoreContainer from '../containers/LoadMoreContainer';\r\n\r\nexport const SearchFilmApp = ({ allowLoadMore }) => <div className=\"container films-app mt-3\">\r\n    <h3 className=\"my-3 text-center\">Films search app</h3>\r\n    <SearchInputContainer />\r\n    <FilmListContainer />\r\n    {allowLoadMore && <LoadMoreContainer />}\r\n</div>\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from \"../uiComponents/Spinner\"\r\nimport {fetchById} from \"../requests/index\"\r\n\r\nconst UnavailableServiceNote = props => <div className=\"alert alert-warning\">\r\n        Service is temporary unavailable\r\n    </div>\r\n\r\nconst NavBlock = props => <nav>\r\n        <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n            <li className=\"breadcrumb-item active\">films</li>\r\n        </ol>\r\n    </nav>\r\n\r\nconst ActorsList = ({ actors }) => <p className=\"card-text\">\r\n        {actors.split(',').map(actor =>\r\n            <span key={actor} className=\"badge badge-light mr-1\">{actor}</span>\r\n        )}\r\n    </p>\r\n\r\nconst FilmTitle = ({ title, rating }) => <h4 className=\"card-title\">\r\n        {rating && <span className=\"badge badge-primary\">{rating}&nbsp;</span>}\r\n        <span className=\"p-1 ml-1\">{title}</span>\r\n    </h4>\r\n\r\nconst FilmCardBody = ({ Poster, Title, Actors, Country, Year, imdbRating, Genre, Plot }) =>\r\n    <div className=\"card border-light shadow-lg bg-warning text-white\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <img src={Poster} className=\"card-img p-1\" alt={Title} />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                    <FilmTitle title={Title} rating={imdbRating} />\r\n                    <h6 className=\"card-text text-muted\">{Country}, {Year}</h6>\r\n                    <div className=\"text-muted\"><small>{Genre}</small></div>\r\n                    <ActorsList actors={Actors} />\r\n                    <p className=\"card-text\">{Plot}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n/**\r\n * Film card component.\r\n * Represents film data\r\n */\r\nclass FilmCard extends PureComponent {\r\n    static propTypes = {\r\n        filmId: PropTypes.string.isRequired\r\n    }\r\n\r\n    state = {\r\n        isProcessing: false,\r\n        data: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isProcessing: true });\r\n        fetchById(this.props.filmId)\r\n            .then(this.handleSuccessResponse)\r\n            .catch(this.handleErrorResponse)\r\n    }\r\n\r\n    handleSuccessResponse = data => this.setState({ data, isProcessing: false })\r\n\r\n    handleErrorResponse = error => {\r\n        console.warn(error);\r\n        this.setState({ isProcessing: false })\r\n    }\r\n\r\n    renderFilmCardBody = data => Object.keys(data).length\r\n        ? <FilmCardBody {...data} />\r\n        : <UnavailableServiceNote />\r\n\r\n    render() {\r\n        const { isProcessing, data } = this.state;\r\n        return <div className=\"container films-app mt-4\">\r\n            <NavBlock />\r\n            {\r\n                !isProcessing\r\n                    ? this.renderFilmCardBody(data)\r\n                    : <Spinner/>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FilmCard;\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport fetchFilmsSaga from '../sagas/index'\nimport { combineReducers } from 'redux'\nimport films from '../reducers/films'\nimport pages from '../reducers/pages'\nimport search from '../reducers/search'\nimport { createStore, applyMiddleware } from 'redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport '../styles/App.css'\nimport SearchFilmAppContainer from \"../containers/SearchFilmAppContainer\";\nimport FilmCard from \"./FilmCard\";\n\nconst reducer = combineReducers({\n    films,\n    pages,\n    search\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware, logger)\n);\n\nsagaMiddleware.run(fetchFilmsSaga);\n\n/**\n * 404 component for wrong query\n */\nconst WrongRoute = props => <h1>Wrong url, dude!</h1>;\n\nconst FilmContainer = ({match: {params: {id: filmId}}}) => <FilmCard filmId={filmId}/>;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/\" exact component={SearchFilmAppContainer} />\n              <Route path=\"/films/:id\" component={FilmContainer} />\n              <Route component={WrongRoute} />\n            </Switch>\n          </Router>\n        </Provider>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}